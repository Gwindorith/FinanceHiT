"use strict";exports.id=307,exports.ids=[307],exports.modules={8307:(e,i,a)=>{a.d(i,{N:()=>getDatabase});var n=a(5890),t=a.n(n),r=a(1017),d=a.n(r);let DatabaseManager=class DatabaseManager{constructor(){let e=d().join(process.cwd(),"data","training-invoicing.db");this.db=new(t())(e),this.db.pragma("journal_mode = WAL")}getAllTrainingInvoices(){let e=this.db.prepare(`
      SELECT * FROM training_invoices 
      ORDER BY created_at DESC
    `);return e.all().map(this.deserializeInvoice)}getTrainingInvoiceById(e){let i=this.db.prepare(`
      SELECT * FROM training_invoices WHERE id = ?
    `),a=i.get(e);return a?this.deserializeInvoice(a):void 0}createTrainingInvoice(e){let i=this.db.prepare(`
      INSERT INTO training_invoices 
      (invoice_number, invoice_date, customer, training_name, training_dates, duration_days, trainer_costs, office_costs, margin_percentage, total_invoice_amount, trainer_availability_emailed, masterclass_planning_added, lms_updated, navara_event_agenda_updated, catering_ordered, trainer_invoice_received)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `),a=i.run(e.invoice_number??"",e.invoice_date??"",e.customer,e.training_name,JSON.stringify(e.training_dates),e.duration_days,e.trainer_costs,e.office_costs,e.margin_percentage,e.total_invoice_amount,e.trainer_availability_emailed?1:0,e.masterclass_planning_added?1:0,e.lms_updated?1:0,e.navara_event_agenda_updated?1:0,e.catering_ordered?1:0,e.trainer_invoice_received?1:0);return this.getTrainingInvoiceById(a.lastInsertRowid)}updateTrainingInvoice(e,i){let a=this.getTrainingInvoiceById(e);if(!a)return;let n={...a,...i},t=this.db.prepare(`
      UPDATE training_invoices 
      SET invoice_number = ?, invoice_date = ?, customer = ?, training_name = ?, training_dates = ?, duration_days = ?, 
          trainer_costs = ?, office_costs = ?, margin_percentage = ?, total_invoice_amount = ?,
          trainer_availability_emailed = ?, masterclass_planning_added = ?, lms_updated = ?, 
          navara_event_agenda_updated = ?, catering_ordered = ?, trainer_invoice_received = ?
      WHERE id = ?
    `);return t.run(n.invoice_number??"",n.invoice_date??"",n.customer??"",n.training_name??"",JSON.stringify(n.training_dates??[]),n.duration_days??0,n.trainer_costs??0,n.office_costs??0,n.margin_percentage??0,n.total_invoice_amount??0,n.trainer_availability_emailed?1:0,n.masterclass_planning_added?1:0,n.lms_updated?1:0,n.navara_event_agenda_updated?1:0,n.catering_ordered?1:0,n.trainer_invoice_received?1:0,e),this.getTrainingInvoiceById(e)}deleteTrainingInvoice(e){let i=this.db.prepare("DELETE FROM training_invoices WHERE id = ?"),a=i.run(e);return a.changes>0}getParticipantsByInvoice(e){let i=this.db.prepare("SELECT * FROM participants WHERE training_invoice_id = ? ORDER BY id ASC");return i.all(e)}addParticipant(e){let i=this.db.prepare("INSERT INTO participants (training_invoice_id, name, email, company) VALUES (?, ?, ?, ?)"),a=i.run(e.training_invoice_id,e.name,e.email,e.company);return this.getParticipantById(a.lastInsertRowid)}getParticipantById(e){let i=this.db.prepare("SELECT * FROM participants WHERE id = ?");return i.get(e)}updateParticipant(e,i){let a=this.getParticipantById(e);if(!a)return;let n={...a,...i},t=this.db.prepare("UPDATE participants SET name = ?, email = ?, company = ? WHERE id = ?");return t.run(n.name,n.email,n.company,e),this.getParticipantById(e)}deleteParticipant(e){let i=this.db.prepare("DELETE FROM participants WHERE id = ?"),a=i.run(e);return a.changes>0}calculateTotalAmount(e,i,a){return e+i+e*(a/100)}deserializeInvoice(e){return{...e,training_dates:JSON.parse(e.training_dates),trainer_availability_emailed:!!e.trainer_availability_emailed,masterclass_planning_added:!!e.masterclass_planning_added,lms_updated:!!e.lms_updated,navara_event_agenda_updated:!!e.navara_event_agenda_updated,catering_ordered:!!e.catering_ordered,trainer_invoice_received:!!e.trainer_invoice_received}}close(){this.db.close()}};let _=null;function getDatabase(){return _||(_=new DatabaseManager),_}}};